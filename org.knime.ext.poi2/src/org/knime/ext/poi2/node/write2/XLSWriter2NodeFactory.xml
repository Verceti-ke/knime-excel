<?xml version="1.0" encoding="utf-8"?>
<knimeNode icon="./xlswriter.png" type="Sink"
	xmlns="http://knime.org/node/v2.12" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://knime.org/node/v2.12 http://knime.org/node/v2.12.xsd">
    <name>Excel Writer (XLS)</name>
    <shortDescription> Saves a data table into a spreadsheet. 
    </shortDescription>
    <fullDescription>
        <intro>
            <p> This node writes the input data table into a spreadsheet of a workbook. The files can be read then with
                other applications like Microsoft Excel, for example.
            </p>
            <p>The node supports two formats, which one is used is derived from the file ending.
            <ul>
                <li>
                    If the file name ends with 'xls' (e.g. <i>filename.xls</i>) it will use the old Excel file format,
                    which was used as default up until Excel 2003. The maximum
                    number of columns held by a spreadsheet of this format is 256 (all additional columns in the data
                    table are truncated). If the input data table has more than 65536 rows it is split into multiple
                    spreadsheets (all stored in the created workbook).
                </li>
                <li>
                    If the file name ends with 'xlsx' (e.g. <i>filename.xlsx</i>) it will use the Office Open XML 
                    format, which is the default format starting with Excel 2007.
                </li>
            </ul>
            </p>
            <p> Note that if the destination location is a remote URL not all options are available because in general
                it's not possible to determine whether the remote location exists. In this case it will always be
                overwritten.
            </p>
         <p>
         	When no extension is specified, it will be treated as an xlsx file.
         </p>
        </intro>
        <option name="Output location"> Enter a valid file name or URL. You can also choose a previously selected local from the
            drop-down list, or select a file from the &quot;Browse...&quot; dialog. Note the file format ending as described above. 
        </option>
        <option name="Overwrite existing file"> If checked, the output file will be overridden if it exists. If unchecked, the node will
            fail during execution in order to retain the original file and to avoid unintentional overwrite. Remote
            location will always be overwritten.
        </option>
        <option name="Open file after execution"> Opens the file after it has been successfully written. The file will be opened in the
            default application of the system. This might not be supported by every system and is not available for
            remote locations.
        </option>
        <option name="Sheet name"> Name of the sheet that will be created. If left empty, the name of the input table will be
            used.
        </option>
        <option name="Write column header"> If checked, the column names are written out in the first row of the spreadsheet.
        </option>
        <option name="Write row ID"> If checked, the row IDs are added to the output, in the first column of the spreadsheet.
        </option>
        <option name="Missing Value Pattern"> Enter a pattern that is set for missing data values. If not specified, the corresponding
            data cell of the spreadsheet stays empty.
        </option>
        <option name="Autosize columns"> Fits the columns width to the content.
        </option>
        <option name="Portrait/Landscape"> Sets the print format to portrait or landscape.
        </option>
        <option name="Paper size"> Sets the paper size in the print setup.
        </option>
        <option name="Exclude/Include columns"> Select the columns that will be written in the XLS/XLSX file. If the columns in the input table
            should change, they will automatically be excluded.
        </option>
    </fullDescription>
    <ports>
        <inPort index="0" name="Input table"> The data table to write out.
        </inPort>
    </ports>
</knimeNode>